name: Deploy Admin Portal Web (Docker CI/CD)

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repo
        uses: actions/checkout@v3

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: ✍️ Generate .env file for production build
        working-directory: ./admin-portal-web
        run: |
          echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" > .env
          echo "VITE_APPLICATION_ID=${{ secrets.VITE_APPLICATION_ID }}" >> .env

      - name: 📦 Install dependencies
        working-directory: ./admin-portal-web
        run: npm install

      - name: 🏗️ Build project
        working-directory: ./admin-portal-web
        run: npm run build

      - name: 🐳 Build Docker image
        run: docker build -f Dockerfile.production -t admin_portal_web .

      - name: 📦 Save Docker image as .tar
        run: docker save -o admin_portal_web.tar admin_portal_web

      - name: 🚀 Upload image to server
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "admin_portal_web.tar"
          target: "/root/"

      - name: 🐳 Load and run container on server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e

            echo "🛑 Stopping previous container (if exists)..."
            docker stop admin_portal_web || true
            docker rm admin_portal_web || true

            echo "📦 Loading new Docker image..."
            docker load -i /root/admin_portal_web.tar

            echo "🔌 Ensure Docker network 'app_network' exists..."
            docker network create app_network || true

            echo "🚀 Running new container (no public port exposed)..."
            docker run -d \
              --name admin_portal_web \
              --network eratonco_app_network \
              admin_portal_web

            echo "✅ Deployment complete (internal-only)!"
